{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Garamond;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This is a sudoku solving algorithm utilizing a backtracking method to arrive at the solution for a given sudoku. The puzzle is solved by finding the first empty cell, incrementing its value by 1 and checking for violations of the sudoku ruleset. If a violation is found the value is yet again incremented by one until no violations are found. When there are no violations the program moves on to the next cell. If no valid values are found by the time the number is 9 the sudoku sets the value of the current cell to 0 (null) then proceeds to backtrack to the last visited cell, incrementing the value by 1 and checking violations. This procedure is repeated until the value of the 81st cell is discovered. A solution is guaranteed but some sudokus may require more time than others for the algorithm to solve. }